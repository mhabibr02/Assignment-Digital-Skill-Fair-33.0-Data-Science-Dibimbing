# -*- coding: utf-8 -*-
"""Digital Skill Fair 33.0 Data Science Dibimbing

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IbMQIQbGNMEA6OiNMTYtuuTYYFCEAzIz

# IMPORT DATASET
"""

# import library
import pandas as pd
import matplotlib.pyplot as mlp
from sklearn.metrics import accuracy_score
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.model_selection import train_test_split
from google.colab import sheets
from matplotlib import pyplot as plt
from sklearn.datasets import load_wine
# load dataset and convert to dataframe
data = load_wine()
# convert data load_wine to dataframe
df = pd.DataFrame(data.data, columns=data.feature_names)
df['target'] = data.target
df.head(10)

# @title proline

from matplotlib import pyplot as plt
df['proline'].plot(kind='hist', bins=20, title='proline')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title od280/od315_of_diluted_wines

from matplotlib import pyplot as plt
df['od280/od315_of_diluted_wines'].plot(kind='hist', bins=20, title='od280/od315_of_diluted_wines')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title hue

from matplotlib import pyplot as plt
df['hue'].plot(kind='hist', bins=20, title='hue')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title color_intensity

from matplotlib import pyplot as plt
df['color_intensity'].plot(kind='hist', bins=20, title='color_intensity')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title proanthocyanins

from matplotlib import pyplot as plt
df['proanthocyanins'].plot(kind='hist', bins=20, title='proanthocyanins')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title nonflavanoid_phenols

from matplotlib import pyplot as plt
df['nonflavanoid_phenols'].plot(kind='hist', bins=20, title='nonflavanoid_phenols')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title flavanoids

from matplotlib import pyplot as plt
df['flavanoids'].plot(kind='hist', bins=20, title='flavanoids')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title total_phenols

from matplotlib import pyplot as plt
df['total_phenols'].plot(kind='hist', bins=20, title='total_phenols')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title magnesium

from matplotlib import pyplot as plt
df['magnesium'].plot(kind='hist', bins=20, title='magnesium')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title alcalinity_of_ash

from matplotlib import pyplot as plt
df['alcalinity_of_ash'].plot(kind='hist', bins=20, title='alcalinity_of_ash')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title ash

from matplotlib import pyplot as plt
df['ash'].plot(kind='hist', bins=20, title='ash')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title malic_acid

from matplotlib import pyplot as plt
df['malic_acid'].plot(kind='hist', bins=20, title='malic_acid')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title alcohol

from matplotlib import pyplot as plt
df['alcohol'].plot(kind='hist', bins=20, title='alcohol')
plt.gca().spines[['top', 'right',]].set_visible(False)

"""# SPREADSHEETS DATASET"""

# convert dataset to sheet
from google.colab import sheets
sheet = sheets.InteractiveSheet(df=df)

"""# DIMENSIONS DATASET"""

# check dimensions dataset
df.shape

"""# FLOAT DATASET"""

# convert format view decimal number
pd.options.display.float_format = '{:,.5f}'.format

# view decription statistics
df.describe()

"""# NULL DATASET"""

# info dataset
df.info()

"""# DTC DATASET"""

from sklearn.model_selection import train_test_split

# define features and target
x = df[data.feature_names]
y = df['target']

# split dataset into training and test sets
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

from sklearn.tree import DecisionTreeClassifier, plot_tree

# initialize decision tree classifier
dt_classifier = DecisionTreeClassifier(random_state=42)

# train the model
dt_classifier.fit(x_train, y_train)

"""# ACCURACY DATASET"""

from sklearn.metrics import accuracy_score

# predict on the test set
y_pred = dt_classifier.predict(x_test)

# calculate accuracy
accuracy = accuracy_score(y_test, y_pred)
print(accuracy*100)

"""# ROADMAP DATASET"""

import matplotlib.pyplot as mlp

# visualize the decision tree
mlp.figure(figsize=(15, 10))
plot_tree(dt_classifier, filled=True, feature_names=data.feature_names, class_names=data.target_names, rounded=True)
mlp.title("Decision Tree for Wine Recognition Dataset")
mlp.show()